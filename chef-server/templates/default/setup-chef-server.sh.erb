#!/usr/bin/env bash

rabbitmq_user=chef
rabbitmq_password=<%= @chef_server['amqp_pass'] %>
rabbitmq_vhost='/chef'

#bring up the backend
echo "Starting up chef backend..."
foreman start -f <%= @chef_server['conf_dir'] %>/Procfile-chef-backend & sleep 10

#add the vhost if not exists
if rabbitmqctl list_vhosts| grep -q "$rabbitmq_vhost" ; then
  echo "Rabbitmq vhost $rabbitmq_vhost exists. Skipping..."
else
  echo "Adding $rabbimq_vhost vhost..."
  rabbitmqctl add_vhost "$rabbitmq_vhost"
fi

#add the user if not exists
if rabbitmqctl list_users| grep -q "$rabbitmq_user" ; then
  echo "Rabbitmq user $rabbitmq_user exists. Skipping..."
else
  echo "Adding rabbitmq user ${rabbimq_user}..."
  rabbitmqctl add_user "$rabbitmq_user" "$rabbitmq_password"
fi

#set the user's permissions
if rabbitmqctl list_user_permissions "$rabbitmq_user" | grep -q "$rabbitmq_vhost" ; then
  echo "Rabbitmq user $rabbitmq_user permissions good. Skipping..."
else
  echo "Setting rabbitmq user ${rabbimq_user} permissions..."
  rabbitmqctl set_permissions -p "$rabbitmq_vhost" "$rabbitmq_user" ".*" ".*" ".*"
fi

#start chef_server to generate the keys
echo "Starting up chef server to generate keys..."
foreman start chef_server -f <%= @chef_server['conf_dir'] %>/Procfile-chef-server & sleep 10

#bring everything down
echo "Bringing everything down..."
kill %`jobs | grep chef-backend | awk '{print $1}'| tr -dC "[:digit:]"`
#kill the epm daemon
kill `ps aux | grep epmd | grep -v grep | awk '{print $2}'`
kill %`jobs | grep chef-server | awk '{print $1}'| tr -dC "[:digit:]"`
